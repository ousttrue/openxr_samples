apply plugin: 'com.android.application'

// These next few lines are just to make the version match the OpenXR release.
project.ext.repoRoot = file('../../third_party/OpenXR-SDK-Source')
apply from: file('../../third_party/OpenXR-SDK-Source/src/version.gradle')

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"
    ndkVersion "21.4.7075529"

    defaultConfig {
        applicationId "com.khronos.openxr.hello_xr"
        // for Vulkan, need at least 24
        minSdkVersion 24
        compileSdkVersion 26

        versionName = project.versionOpenXR.toString() + project.versionQualifier
        versionCode = project.versionOpenXR.getVersionCode()

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_shared'
                cppFlags '-DDEFAULT_GRAPHICS_PLUGIN_OPENGLES'
            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDir 'android_resources'
        }
        // Vulkan {
        //     res.srcDir 'android_resources/vulkan'
        // }
        // OpenGLES {
        //     res.srcDir 'android_resources/opengles'
        // }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    // flavorDimensions 'api'

    // productFlavors {
    //     OpenGLES {
    //         dimension 'api'
    //         applicationIdSuffix '.opengles'
    //         externalNativeBuild.cmake.cppFlags '-DDEFAULT_GRAPHICS_PLUGIN_OPENGLES'

    //         resValue "string", "app_name", "Hello XR (OpenGL ES)"
    //     }
    //     Vulkan {
    //         dimension 'api'
    //         applicationIdSuffix '.vulkan'
    //         externalNativeBuild.cmake.cppFlags '-DDEFAULT_GRAPHICS_PLUGIN_VULKAN'

    //         resValue "string", "app_name", "Hello XR (Vulkan)"
    //     }
    // }
}
